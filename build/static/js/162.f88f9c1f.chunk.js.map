{"version":3,"file":"static/js/162.f88f9c1f.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.jsx","pages/detail/Credits/Credits.jsx","pages/detail/DetailVideos/DetailVideos.jsx","pages/detail/MovieDetail.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport movieAPI from '../../api/movieAPI'\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport MovieCard from '../MovieCard/MovieCard';\r\nimport { category } from '../../api/movieAPI';\r\nimport './movielist.scss'\r\nconst MovieList = (props) => {\r\n    const {id} = props\r\n    const [movies, setMovies] = useState([])\r\n    useEffect(() => {\r\n        let data = [];\r\n        const getMovies = async () => {\r\n            if(id){\r\n                if(props.type === 'similar') {\r\n                    data = await movieAPI.getSimilarVideo(props.category, id).then(result => result.results)\r\n                } else {\r\n                  switch(props.category){\r\n                    case category.movie: \r\n                        data = await movieAPI.getMovieList(props.type).then(result => result.results)\r\n                        break;\r\n                    default: \r\n                      data = await movieAPI.getTvList(props.type).then(result => result.results)\r\n                    \r\n                  }\r\n                }\r\n                if(data.length < 1) {\r\n                      data = await movieAPI.getTvList('onTheAir').then(result => result.results)\r\n                }\r\n            }\r\n            setMovies(data)\r\n        }\r\n        getMovies()\r\n    }, [id, props.category,props.type])\r\n  return (\r\n    <div className='mt-12'>\r\n        <Swiper\r\n        slidesPerView={5}\r\n        spaceBetween={30}\r\n        pagination={{\r\n          clickable: true,\r\n        }}\r\n        className = 'flex overflow-hidden'\r\n      >\r\n        {\r\n            movies.map(item => {\r\n                return (\r\n                    <SwiperSlide key ={item.id}>\r\n                        <MovieCard category = {props.category} item = {item}/>\r\n                    </SwiperSlide>\r\n                )\r\n            })\r\n        }\r\n      </Swiper>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MovieList","import React, { useEffect, useState } from 'react'\r\nimport movieAPI from '../../../api/movieAPI'\r\nconst Credits = (props) => {\r\n    const {id} = props\r\n    let [casts, setCasts] = useState([])\r\n    useEffect(() => {\r\n        const getCasts = async () => {\r\n            if(id) {\r\n                const data = await movieAPI.getCredits('movie',id).then(results => results.cast)\r\n                setCasts(data)\r\n            }\r\n        }\r\n        getCasts()\r\n    }, [id])\r\n    casts = casts ? casts.slice(0,5) : []\r\n  return (\r\n    <div className='flex items-center'>\r\n        {casts.map(item => {\r\n            return <div key = {item.id} className ='mr-4 w-1/4'>\r\n                <div className='w-[100px] h-[150px] bg-cover bg-center bg-no-repeat' style = {item.profile_path ? {backgroundImage: `url(https://image.tmdb.org/t/p/original${item.profile_path})`} : {backgroundImage: `url(https://st3.depositphotos.com/23594922/31822/v/600/depositphotos_318221368-stock-illustration-missing-picture-page-for-website.jpg)`}}></div>\r\n                <div className='mt-4'>\r\n                    <p className='text-white'>{item.name}</p>\r\n                </div>\r\n            </div>\r\n        })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Credits","import React, { useEffect, useState } from 'react'\r\nimport movieAPI from '../../../api/movieAPI'\r\nconst DetailVideos = (props) => {\r\n\r\n    const [videos,setVideos] = useState([])\r\n\r\n    useEffect(() => {\r\n        const getVideos = async () => {\r\n            if(props.id) {\r\n                const data = await movieAPI.getOtherVideo('movie', props.id)\r\n                setVideos(data.results.slice(0,5))\r\n            }\r\n        }\r\n        getVideos()\r\n        \r\n    }, [props.id])\r\n  return (\r\n    <div className='max-w-[1300px] m-[auto]'>\r\n        {videos.map(item => <Video key = {item.id} item = {item}/>)}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const Video = (props) => {\r\n    const {item} = props\r\n    return (\r\n        <>\r\n            <div className='mt-12'>\r\n                <div className='mb-4'>\r\n                    <h2 className='text-white text-xl font-bold'>{item.name}</h2>\r\n                </div>\r\n                <iframe className='w-[100%] h-[700px]' title = 'video' src = {`https://www.youtube.com/embed/${item.key}`}></iframe>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DetailVideos","import React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport movieAPI from '../../api/movieAPI'\r\nimport MovieList from '../../components/MovieList/MovieList'\r\nimport Credits from './Credits/Credits'\r\nimport DetailVideos from './DetailVideos/DetailVideos'\r\nimport './moviedetail.scss'\r\n\r\nconst MovieDetail = () => {\r\n    if (window.scrollY) {\r\n        window.scroll(0, 0); \r\n    }\r\n    const {category,id} = useParams()\r\n    const [movie,setMovie] = useState([])\r\n    useEffect(() => {\r\n        const getMovieDetail = async () => {\r\n            const item = await movieAPI.getDetail(category,id)\r\n            setMovie(item)\r\n        }\r\n        getMovieDetail()\r\n    }, [category,id])\r\n  return (\r\n    <div className='container'>\r\n        <div className='moviedetail-banner' style = {{backgroundImage: `url(https://image.tmdb.org/t/p/original${movie.backdrop_path || movie.poster_path})`}}></div>\r\n        <div className='moviedetail-content'>\r\n            <div className='moviedetail-content__poster'>\r\n                <div className='moviedetail-content__poster__image' style = {{backgroundImage : `url(https://image.tmdb.org/t/p/original${movie.poster_path || movie.backdrop_path})`}}></div>\r\n            </div>\r\n            <div className='moviedetail-content__info ml-8'>\r\n                <div>\r\n                    <p className='text-white text-[48px] font-bold'>{movie.title || movie.name}</p>\r\n                </div>\r\n                <div className='mt-4'>\r\n                    <ul className='flex items-center'>\r\n                        {movie.genres && movie.genres.map((item) => {\r\n                            return <li className = 'mr-4 text-white text-[14px] py-1 px-8 rounded-3xl border-solid border-2 border-white' key = {item.id}>{item.name}</li>\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n                <div className='mt-8'>\r\n                    <p className='text-white'>{movie.overview}</p>\r\n                </div>\r\n                <div className='mt-8'>\r\n                    <p className='text-lg text-white'>Cast:</p>\r\n                    <div className='mt-4'>\r\n                        <Credits id = {movie.id}/>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className='mt-8'>\r\n            <DetailVideos id ={movie.id}/>\r\n        </div>\r\n        <div className='max-w-[1300px] m-[auto] mt-8'>\r\n            <div className='mb-4'>\r\n                <h3 className='font-bold text-white text-xl'>Similar</h3>\r\n            </div>\r\n            <div>\r\n                <MovieList category = {category} type ='similar' id = {movie.id}/>\r\n            </div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MovieDetail"],"names":["props","id","_useState","useState","_useState2","_slicedToArray","movies","setMovies","useEffect","data","getMovies","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","type","movieAPI","category","then","result","results","sent","t0","abrupt","length","stop","apply","arguments","_jsx","className","children","Swiper","slidesPerView","spaceBetween","pagination","clickable","map","item","SwiperSlide","MovieCard","casts","setCasts","getCasts","cast","slice","_jsxs","style","profile_path","backgroundImage","concat","name","Video","_Fragment","title","src","key","videos","setVideos","getVideos","window","scrollY","scroll","_useParams","useParams","movie","setMovie","getMovieDetail","backdrop_path","poster_path","genres","overview","Credits","DetailVideos","MovieList"],"sourceRoot":""}